name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '17'
      - run: npm ci
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

  lint-commit:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '17'
      - run: npm ci
      - run: npx commitlint --from ${{ github.event.pull_request.base.sha || 'origin/main' }} --to ${{ github.event.pull_request.head.sha || 'HEAD' }}

  lint-src:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '17'
      - run: npm ci
      - run: npm run format
      - name: Check for changes
        run: |
          if [[ $(git diff | wc -l) -gt 0 ]]; then
            echo "Code formatting issues found"
            exit 1
          fi

  generate-docs:
    needs: [lint-commit, lint-src]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '17'
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
          gconf-service libasound2 libatk1.0-0 libatk-bridge2.0-0 libc6 libcairo2 libcups2 libdbus-1-3 \
          libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 \
          libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 \
          libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates \
          fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget pdftk
      - run: npm ci
      - run: |
          mkdir -p resume
          npm run generate-from-json --output_dir=resume --file=resume.short
          npm run generate-from-json --output_dir=resume --file=resume.full
          npm run generate-from-json --output_dir=resume --file=resume.ja.full
      - name: Check PDF page count
        run: |
          if [ $(pdftk resume/HiromiShikata.resume.short.pdf dump_data | grep NumberOfPages | awk '{print $2}') -ne 1 ]; then
            echo "Resume must be exactly 1 page"
            exit 1
          fi
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: resume
          path: resume/
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./resume
          destination_dir: resume
          keep_files: true

  release:
    needs: generate-docs
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '17'
      - run: npm ci
      - name: Configure Git
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npx standard-version
          rm RESUME.masked-name.ja.md -f
          sed 's@"志方 裕美"@"********"@g' RESUME.ja.md >> RESUME.masked-name.ja.md
          npm run format
          git add -A
          git commit --amend -m "$(git log --pretty=format:'%s' | head -n 1) [skip ci]"
          git push --follow-tags origin main
